proxy-providers:
  SSRDOG:
    url: "https://05f25a42ac94abd5055e782954acf039.shanghai-aliyuncs.com/s?t=05f25a42ac94abd5055e782954acf039.jpg"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

  GLADOS:
    url: "https://update.glados-config.com/clash/65523/ca28693/134728/glados.yaml"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    
  DegYax:
    url: "https://2ecde35d-10dc-4e67-a9bc-0bf4a0c859f2.com/playlist?token=b21522e00d7121ec9e1be16db0ecb5e9"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    
  CF:
    url: "https://cf.lxw314.ltd/d69567a3-1dca-450e-87aa-8230ed5f22d2?sub"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

proxies:
  - {name: 直连, type: direct}

port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
mode: rule
allow-lan: true
ipv6: true
bind-address: "*"
keep-alive-interval: 15
keep-alive-idle: 600
tcp-concurrent: true
unified-delay: true
geodata-loader: standard
authentication:
- Clash:Clash3.14
log-level: warning
profile:
  store-selected: true
  store-fake-ip: true

geox-url:
  mmdb: https://testingcf.jsdelivr.net/gh/alecthw/mmdb_china_ip_list@release/lite/Country.mmdb
  #geoip: https://testingcf.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat
  geosite: https://testingcf.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat
  asn: https://testingcf.jsdelivr.net/gh/xishang0128/geoip@release/GeoLite2-ASN.mmdb

external-controller: 0.0.0.0:9090
secret: Zash3.14
external-ui: "/usr/share/openclash/ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

sniffer:
  enable: true
  override-destination: true
  sniff:
    QUIC:
      ports: 443
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
  force-domain:
  - "+.netflix.com"
  skip-domain:
  - "+.apple.com"
  - Mijia Cloud
  parse-pure-ip: true

dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: true
  respect-rules: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
  - "+.lan"
  - "+.local"
  - "time.*.com"
  - "ntp.*.com"
  - "+.srv.nintendo.net"
  - "*.n.n.srv.nintendo.net"
  - "+.cdn.nintendo.net"
  - "+.stun.playstation.net"
  - "+.uu.163.com"
  - "ps.res.netease.com"
  - "+.msftconnecttest.com"
  - "+.msftncsi.com"
  - "+.market.xiaomi.com"
  - "geosite:cn"
  - "+.lxw314.top"
  default-nameserver:
  - 223.5.5.5
  - 119.29.29.29
  proxy-server-nameserver:
  - https://223.5.5.5/dns-query
  nameserver:
  - tls://dns.alidns.com
  - https://doh.pub/dns-query

proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 📹 国外媒体, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 💬 社交通讯, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 🤖 AI, type: select, proxies: [♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 🎮 游戏平台, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 🎮 游戏下载, type: select, proxies: [直连, ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点]}
  - {name: 👨🏿‍💻 H, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 🪟 微软服务, type: select, proxies: [直连, ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点]}
  - {name: 🤖 bing, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点, 直连]}
  - {name: 🍎 苹果服务, type: select, proxies: [直连, ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点]}
  - {name: ✈️ 网络测速, type: select, proxies: [直连, ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [直连, ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 台湾自动, 🌐 其他节点]}
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)hk|hong|kong|港"}
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)jp|japan|日"}
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)us|states|america|美"}
  - {name: ♻️ 台湾自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)tw|taiwan|台"}
  - {name: 🌐 其他节点, type: select, include-all: true, filter: "(?i)^(?!.*(港|台|日|美|hk|tw|jp|us|hong|taiwan|japan|states|america))"}

rules:
  - RULE-SET,private_ip,直连
  - RULE-SET,private_domain,直连
  - RULE-SET,my_direct,直连
  - RULE-SET,my_proxy,🚀 默认代理
  - IP-ASN,9808,DIRECT
  - IP-ASN,4134,DIRECT
  - RULE-SET,google_cn_domain,直连
  - RULE-SET,github_domain,🚀 默认代理
  - RULE-SET,bing_domain,🤖 bing
  - RULE-SET,microsoft_domain,🪟 微软服务
  - RULE-SET,apple_domain,🍎 苹果服务
  - RULE-SET,ai,🤖 AI
  - RULE-SET,pixiv_domain,👨🏿‍💻 H
  - RULE-SET,eh_domain,👨🏿‍💻 H
  - RULE-SET,jm_domain,👨🏿‍💻 H
  - RULE-SET,pica_domain,👨🏿‍💻 H
  - RULE-SET,dmm_domain,♻️ 日本自动
  - RULE-SET,game_dl_domain,🎮 游戏下载
  - RULE-SET,game_cn_domain,直连
  - RULE-SET,game_!cn_domain,🎮 游戏平台
  - RULE-SET,communication_domain,💬 社交通讯
  - RULE-SET,social_domain,💬 社交通讯
  - RULE-SET,forums_domain,💬 社交通讯
  - RULE-SET,telegram_ip,💬 社交通讯,no-resolve
  - RULE-SET,bahamut_domain,♻️ 台湾自动
  - RULE-SET,youtube_domain,📹 国外媒体
  - RULE-SET,tiktok_domain,📹 国外媒体
  - RULE-SET,netflix_domain,📹 国外媒体
  - RULE-SET,netflix_ip,📹 国外媒体,no-resolve
  - RULE-SET,google_domain,🚀 默认代理
  - RULE-SET,google_ip,🚀 默认代理,no-resolve
  - RULE-SET,speedtest_domain,✈️ 网络测速
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,直连
  - RULE-SET,cn_ip,直连
  - MATCH,🐟 漏网之鱼

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  google_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google-cn.mrs"}
  my_direct: { <<: *class, url: "https://raw.githubusercontent.com/lxw314/config/main/openclash/my_direct.list"}
  my_proxy: { <<: *class, url: "https://raw.githubusercontent.com/lxw314/config/main/openclash/my_proxy.list"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  bing_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bing.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  ai: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  pixiv_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/pixiv.mrs"}
  eh_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ehentai.mrs"}
  jm_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/18comic.mrs"}
  pica_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/picacg.mrs"}
  dmm_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/dmm.mrs"}
  game_dl_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-game-platforms-download.mrs"}
  game_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games-cn.mrs"}
  game_!cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games-!cn.mrs"}
  bahamut_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.mrs"}
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  communication_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-communication.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  forums_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-forums.mrs"}
  social_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-social-media-!cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-speedtest.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}